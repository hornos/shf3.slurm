
function slurm/cli/update() {
  local _n=$1
  shift
  local _s=$1
  shift
  local _r=$1
  if empty "${_n}" || empty "${_s}" ; then
    $failure
  fi

  local _q="update NodeName=${_n} State=${_s}"
  if ! empty "${_r}" ; then
    _q="${_q} Reason=${_r}"
  fi
  ${slurm_cli_scontrol} ${_q}
}

function slurm/cli/drain() {
  if empty "$*" ; then $failure ; fi

  local _hosts=$(${slurm_cli_scontrol} show hostname $*)
  local _r=""

  read -p "Reason for drain (no spaces): " _r
  answer "Drain nodes: ${_hosts}?"
  if failed $? ; then $failure ; fi

  local i
  for i in ${_hosts} ; do
    echo -n "Drain node: ${i} "
    slurm/cli/update "${i}" drain "${_r}"
    if failed $? ; then
      echo "FAILED"
    else
      echo "OK"
    fi
  done
}


function slurm/cli/down() {
  import slurm/sgi

  if empty "$*" ; then $failure ; fi

  local _hosts=$(${slurm_cli_scontrol} show hostname $*)
  local _r=""

  read -p "Reason for down (no spaces): " _r
  answer "Down nodes: ${_hosts}?"
  if failed $? ; then $failure ; fi

  local _t=${slurm_cli_down_timeout}
  echo "Waiting ${_t} s (Press Ctrl-C to abort)"
  sleep ${_t}

  local i
  for i in ${_hosts} ; do
    echo -n "Down node: ${i} "
    slurm/cli/update "${i}" down "${_r}"
    if failed $? ; then
      echo "FAILED"
    else
      echo "OK"
      answer "Flash node identification led?"
      if succeed $? ; then
        slurm/sgi/flash "${i}"
      fi
    fi
  done
}

function slurm/cli/up() {
  import slurm/sgi

  if empty "$*" ; then $failure ; fi

  local _hosts=$(${slurm_cli_scontrol} show hostname $*)
  local _r=""

  answer "Up nodes: ${_hosts}?"
  if failed $? ; then $failure ; fi

  local i
  for i in ${_hosts} ; do
    echo -n "Up node: ${i} "
    slurm/cli/update "${i}" idle "${_r}"
    if failed $? ; then
      echo "FAILED"
    else
      echo "OK"
      slurm/sgi/unflash "${i}"
    fi
  done
}

function slurm/cli/log() {
  if empty "$*" ; then $failure ; fi

  local _n=$1
  local _log=""
  local _m=""

  answer "Show log for ${_n}?"
  if failed $? ; then $failure ; fi

  case "${_n}" in
    slurm)
      _log="/var/log/messages"
      _m="${_n}"
    ;;
    *)
      _log="${slurm_cli_logdir}/${_n}"
    ;;
  esac

  if empty "${_m}" ; then
    tail -f "${_log}"
  else
    tail -f "${_log}" | grep ${_m}
  fi
}

function slurm/cli/cmd() {
  local _n=$1
  shift
  if empty "${_n}" ; then
    msg "Node not found"
    $failure
  fi

  local _t=$(${slurm_cli_nodeattr} ${_n})
  if ! test "${_t}" = "compute" ; then
    echo "Not compute node: ${_n}"
    $failure
  fi
  ${slurm_cli_ssh} ${_n} $*
}


function slurm/cli/term() {
  local _n=$1
  shift
  slurm/cli/cmd ${_n} -t $*
}


function slurm/cli/exit() {
  if test -r "${slurm_cli_tmp}" ; then
    rm -f "${slurm_cli_tmp}"
  fi
  exit $?
}

function slurm/cli/stat() {
  local _n=$1
  if empty "${_n}" ; then
    $failure
  fi
  local _tmp="${slurm_cli_tmp}/${gbn}.$$"
  # trap slurm/cli/exit INT TERM EXIT
  ${slurm_cli_scontrol} show hostnames "${_n}" > "${_tmp}"
  ${slurm_cli_pmstat} -H "${_tmp}"
  rm -f "${_tmp}"
}
